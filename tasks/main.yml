---
- name: "Make mirror directory"
  file:
    path: "{{ mirror_destination }}"
    mode: "775"
    state: directory
    owner: nginx
    setype: httpd_sys_content_t

- name: "See if data disk is formatted"
  shell: "lsblk -n -o FSTYPE {{ mirror_data_disk }}"
  register: data_disk
  changed_when: "'xfs' not in data_disk.stdout"

- name: "Format data disk"
  shell: "mkfs.xfs {{ mirror_data_disk }}"
  when: data_disk.changed

- name: "Create fstab entry"
  lineinfile:
    path: /etc/fstab
    regexp: "^{{ mirror_data_disk }} .*"
    line: "{{ mirror_data_disk }} {{ mirror_destination }} xfs defaults{{ ',context=system_u:object_r:httpd_sys_content_t:s0' if ansible_os_family == 'RedHat' else '' }} 0 1"
  register: fstab

- name: "Mount data disk"
  shell: "mount -a"
  when: fstab.changed

- name: "UFW: enable http"
  community.general.ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  with_items:
    - 80
    - 443
  when: ansible_os_family == 'Debian'

- name: "FirewallD: enable http"
  firewalld:
    immediate: yes
    permanent: yes
    port: "{{ item }}/tcp"
    state: enabled
  with_items:
    - 80
    - 443
  when: ansible_os_family == 'RedHat'

- name: "Install mirror configuration"
  template:
    src: mirror.conf.j2
    dest: /etc/mirror.conf
    owner: root
    mode: "644"

- name: "Install mirror script"
  copy:
    src: mirror.py
    dest: /usr/local/bin/mirror.py
    owner: root
    mode: "755"

- name: "Install cron task"
  copy:
    src: mirror.cron
    dest: /etc/cron.d/mirror
    owner: root
    mode: "644"

- name: "Install nginx configuration"
  template:
    src: nginx-mirror.j2
    dest: "{{ '/etc/nginx/sites-available/mirror' if ansible_os_family == 'Debian' else '/etc/nginx/conf.d/mirror.conf' }}"
    owner: root
    mode: "644"
  notify: nginx_restart

- name: "Nginx: enable mirror"
  file:
    src: /etc/nginx/sites-available/mirror
    dest: /etc/nginx/sites-enabled/mirror
    state: link
    owner: root
  notify: nginx_restart
  when: ansible_os_family == 'Debian'

- name: "Enable nginx"
  service:
    name: nginx
    state: started
    enabled: yes

- name: "Mirror files"
  include_tasks: "mirror_files.yml"
  with_items: "{{ mirror_files }}"
